<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.flipp5b</groupId>
    <artifactId>ws-autotesting</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>
    <name>ws-autotesting</name>

    <properties>
        <skipITs>true</skipITs>
    </properties>

    <repositories>
        <repository>
            <id>soapui</id>
            <url>http://www.soapui.org/repository/maven2</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- Добавляем BOM с указанием версий артефактов для Arquillian -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.1.8.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-7.0</artifactId>
            <version>1.0.3.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- Зависимость для интеграции Arquillian с JUnit.
             При необходимости мы могли бы аналогично указать интеграцию с TestNG -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Arquillian-адаптер для сервера приложений WildFly-9.0.1.Final.
             Адаптеры есть для большинства популярных серверов, поэтому, в зависимости от потребности,
             можно указать адаптер для другого сервера -->
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <version>1.0.1.Final</version>
            <scope>test</scope>
        </dependency>

        <!-- Зависимость от SoapUI для запуска тестов из SoapUI-проекта -->
        <dependency>
            <groupId>com.smartbear.soapui</groupId>
            <artifactId>soapui</artifactId>
            <version>5.1.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <!-- Выполнять тесты последовательно, форкая для каждого новую VM -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>

                    <redirectTestOutputToFile>false</redirectTestOutputToFile>

                    <!-- Будем пропускать выполнение тестов, если явно не указан профиль it
                         (т.к. интеграционные тесты могут выполняться очень долго)-->
                    <skipITs>${skipITs}</skipITs>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <warName>ws-autotesting</warName>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>it</id>
            <properties>
                <skipITs>false</skipITs>
            </properties>
        </profile>
    </profiles>
</project>
